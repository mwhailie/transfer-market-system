/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package userinterface.systemadmin;

import business.EcoSystem;
import business.enterprise.Enterprise;
import business.network.Network;
import java.awt.CardLayout;
import java.awt.Component;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.table.DefaultTableModel;
import org.jfree.chart.ChartFactory;
import org.jfree.chart.ChartPanel;
import org.jfree.chart.JFreeChart;
import org.jfree.chart.plot.CategoryPlot;
import org.jfree.chart.plot.PlotOrientation;
import org.jfree.data.category.DefaultCategoryDataset;

/**
 *
 * @author mwhai_000
 */
public class ViewNetworkTransferReportJPanel extends javax.swing.JPanel {

    private JPanel userProcessContainer;
    private EcoSystem system;

    /**
     * Creates new form ViewSystemTransferReport
     */
    ViewNetworkTransferReportJPanel(JPanel userProcessContainer, EcoSystem system) {
        initComponents();

        this.userProcessContainer = userProcessContainer;
        this.system = system;
        populateCmbNetwork();

    }

    private void populateCmbNetwork() {
        cmbNetWork.removeAllItems();

        for (Network network : system.getNetworkList()) {
            cmbNetWork.addItem(network);
        }
    }

    private void populateAverageTransferFeeBarChart(Network network) {
        DefaultCategoryDataset bar = new DefaultCategoryDataset();

        JFreeChart barChart = ChartFactory.createBarChart("Most Popular Player Bar Chart", "Player", "Vote", bar, PlotOrientation.HORIZONTAL, true, true, false);
        //        ChartFrame frame = new ChartFrame("Most Popular Player Bar Chart", barChart);
        //        frame.setVisible(true);
        //        frame.setSize(600, 800);

        CategoryPlot barchrt = barChart.getCategoryPlot();
        ChartPanel barPanel = new ChartPanel(barChart);
        try {
            for (Enterprise e : network.getEnterpriseDirectory().getEnterpriseList()) {
                bar.addValue(e.getAverageTransferFee(), "Average Transfer Fee", e.getName());
            }
            for (Enterprise e : network.getEnterpriseDirectory().getEnterpriseList()) {
                bar.addValue(e.getAverageTransferFee(), "Average Transfer Fee", e.getName());
            }
        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, null);
        }

        aveTransferFee.removeAll();
        aveTransferFee.add(barPanel);
        aveTransferFee.updateUI();

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tableClub = new javax.swing.JTable();
        cmbNetWork = new javax.swing.JComboBox();
        backJButton = new javax.swing.JButton();
        jTabbedPane1 = new javax.swing.JTabbedPane();
        aveTransferFee = new javax.swing.JPanel();

        jLabel1.setFont(new java.awt.Font("Calibri", 0, 24)); // NOI18N
        jLabel1.setText("View Network Transfer Report");

        jLabel2.setText("Country");

        tableClub.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null}
            },
            new String [] {
                "Enterprise Name", "Spending", "Receipts", "Incoming Transfer Number", "Outcoming Transfer Num"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, true, true, true, true
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(tableClub);

        cmbNetWork.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        cmbNetWork.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cmbNetWorkActionPerformed(evt);
            }
        });

        backJButton.setText("<< Back");
        backJButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                backJButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout aveTransferFeeLayout = new javax.swing.GroupLayout(aveTransferFee);
        aveTransferFee.setLayout(aveTransferFeeLayout);
        aveTransferFeeLayout.setHorizontalGroup(
            aveTransferFeeLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 657, Short.MAX_VALUE)
        );
        aveTransferFeeLayout.setVerticalGroup(
            aveTransferFeeLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 316, Short.MAX_VALUE)
        );

        jTabbedPane1.addTab("Average Transfer Fee", aveTransferFee);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(134, 134, 134)
                        .addComponent(jLabel2)
                        .addGap(18, 18, 18)
                        .addComponent(cmbNetWork, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(230, 230, 230)
                        .addComponent(jLabel1))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(44, 44, 44)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(backJButton)
                            .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 748, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(79, 79, 79)
                        .addComponent(jTabbedPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 662, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(221, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(25, 25, 25)
                .addComponent(jLabel1)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(cmbNetWork, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 106, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jTabbedPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 345, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 41, Short.MAX_VALUE)
                .addComponent(backJButton)
                .addContainerGap())
        );
    }// </editor-fold>//GEN-END:initComponents

    private void cmbNetWorkActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cmbNetWorkActionPerformed
        // TODO add your handling code here:

        Network network = (Network) cmbNetWork.getSelectedItem();
        if (network != null) {
            populateTableClub(network);
            populateAverageTransferFeeBarChart(network);
        }
    }//GEN-LAST:event_cmbNetWorkActionPerformed

    private void backJButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_backJButtonActionPerformed
        userProcessContainer.remove(this);
        Component[] componentArray = userProcessContainer.getComponents();
        Component component = componentArray[componentArray.length - 1];
        SystemAdminWorkAreaJPanel sysAdminwjp = (SystemAdminWorkAreaJPanel) component;
        sysAdminwjp.populateTree();

        CardLayout layout = (CardLayout) userProcessContainer.getLayout();
        layout.previous(userProcessContainer);
    }//GEN-LAST:event_backJButtonActionPerformed
    private void populateTableClub(Network network) {
        DefaultTableModel model = (DefaultTableModel) tableClub.getModel();

        model.setRowCount(0);
        for (Enterprise e : network.getEnterpriseDirectory().getEnterpriseList()) {
            Object[] row = new Object[5];
            row[0] = e;
            row[1] = e.getTotalTransferOutcome();
            row[2] = e.getTotalTransferIncome();
            row[3] = e.getIncomingTransferNumber();
            row[4] = e.getOutgoingTransferNumber();
            model.addRow(row);
        }
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JPanel aveTransferFee;
    private javax.swing.JButton backJButton;
    private javax.swing.JComboBox cmbNetWork;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTabbedPane jTabbedPane1;
    private javax.swing.JTable tableClub;
    // End of variables declaration//GEN-END:variables
}
