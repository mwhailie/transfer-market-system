/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package userinterface.managerrole;

import business.employee.Employee;
import business.role.Role;
import business.enterprise.Enterprise;
import business.organization.CoachOrganization;
import business.organization.ManagerOrganization;
import business.organization.Organization;
import business.organization.ScoutOrganization;
import business.useraccount.UserAccount;
import business.workqueue.CoachWorkRequest;
import business.workqueue.WorkRequest;
import java.awt.CardLayout;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author mwhai_000
 */
public class AssignTasksToScouts extends javax.swing.JPanel {

    private Enterprise enterprise;
    private JPanel userProcessContainer;
    private final ManagerOrganization managerOrganization;
    private final UserAccount userAccount;

    /**
     * Creates new form AssignTasksToScouts
     */
    AssignTasksToScouts(JPanel userProcessContainer, UserAccount userAccount, Organization organization, Enterprise enterprise) {
        initComponents();
        this.userProcessContainer = userProcessContainer;
        this.userAccount = userAccount;
        this.enterprise = enterprise;
        this.managerOrganization = (ManagerOrganization) organization;

        populateRequestTable();
        populateComboBox();
    }

    public void populateRequestTable() {
        DefaultTableModel model = (DefaultTableModel) coachRequestJTable.getModel();

        model.setRowCount(0);
        for (WorkRequest request : managerOrganization.getWorkQueue().getWorkRequestList()) {
            if (request instanceof CoachWorkRequest) {
                Object[] row = new Object[4];
                row[0] = (CoachWorkRequest) request;
                row[1] = ((CoachWorkRequest) request).getNumber();
                row[2] = request.getReceiver();
                row[3] = request.getStatus();
                model.addRow(row);
            }
        }
    }

    private void populateComboBox() {
        cmbScout.removeAllItems();

        for (Organization o : enterprise.getOrganizationDirectory().getOrganizationList()) {
            if (o instanceof ScoutOrganization) {
                for (UserAccount ua : o.getUserAccountDirectory().getUserAccountList()) {
                    cmbScout.addItem(ua);
                }
            }
        }

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        coachRequestJTable = new javax.swing.JTable();
        jLabel1 = new javax.swing.JLabel();
        cmbScout = new javax.swing.JComboBox();
        btnAssign = new javax.swing.JButton();
        btnBack = new javax.swing.JButton();
        jLabel11 = new javax.swing.JLabel();

        coachRequestJTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Position", "Number", "Receiver", "Status"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(coachRequestJTable);
        if (coachRequestJTable.getColumnModel().getColumnCount() > 0) {
            coachRequestJTable.getColumnModel().getColumn(0).setResizable(false);
            coachRequestJTable.getColumnModel().getColumn(1).setResizable(false);
            coachRequestJTable.getColumnModel().getColumn(2).setResizable(false);
            coachRequestJTable.getColumnModel().getColumn(3).setResizable(false);
        }

        jLabel1.setText("Assign to:");

        cmbScout.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));

        btnAssign.setText("Assign");
        btnAssign.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAssignActionPerformed(evt);
            }
        });

        btnBack.setText("<<Back");
        btnBack.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBackActionPerformed(evt);
            }
        });

        jLabel11.setFont(new java.awt.Font("Calibri", 0, 24)); // NOI18N
        jLabel11.setText("Assign Tasks To Scouts");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(56, 56, 56)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(btnBack)
                                .addGap(63, 63, 63)
                                .addComponent(jLabel1)
                                .addGap(18, 18, 18)
                                .addComponent(cmbScout, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(39, 39, 39)
                                .addComponent(btnAssign))
                            .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 452, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(177, 177, 177)
                        .addComponent(jLabel11)))
                .addContainerGap(92, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(30, 30, 30)
                .addComponent(jLabel11)
                .addGap(29, 29, 29)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 111, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(36, 36, 36)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(cmbScout, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnAssign)
                    .addComponent(btnBack))
                .addContainerGap(141, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void btnBackActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBackActionPerformed
        // TODO add your handling code here:
        userProcessContainer.remove(this);
        CardLayout layout = (CardLayout) userProcessContainer.getLayout();
        layout.previous(userProcessContainer);
    }//GEN-LAST:event_btnBackActionPerformed

    private void btnAssignActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAssignActionPerformed
        // TODO add your handling code here:
        int selectedRow = coachRequestJTable.getSelectedRow();

        if (selectedRow < 0) {
            JOptionPane.showMessageDialog(null, "Please select a row!");
            return;
        }
        UserAccount selectedScout = (UserAccount) cmbScout.getSelectedItem();

        CoachWorkRequest request = (CoachWorkRequest) coachRequestJTable.getValueAt(selectedRow, 0);

        request.setReceiver(selectedScout);
        request.setStatus("Pending");
        request.setStatus("Assigned to"+selectedScout.getUsername());
        Organization org = null;
        for (Organization organization : enterprise.getOrganizationDirectory().getOrganizationList()) {
            if (organization instanceof ScoutOrganization) {
                org = organization;
                break;
            }
        }//////////???
        if (org != null) {
            for (UserAccount ua : org.getUserAccountDirectory().getUserAccountList()) {
                if (ua.equals(selectedScout)) {
                    ///org.getWorkQueue().getWorkRequestList().add(request);
                    ua.getWorkQueue().getWorkRequestList().add(request);////?
                    JOptionPane.showMessageDialog(null, "Request Submitted!");
                }
            }
        }
        

        populateRequestTable();
    }//GEN-LAST:event_btnAssignActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnAssign;
    private javax.swing.JButton btnBack;
    private javax.swing.JComboBox cmbScout;
    private javax.swing.JTable coachRequestJTable;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JScrollPane jScrollPane1;
    // End of variables declaration//GEN-END:variables
}
