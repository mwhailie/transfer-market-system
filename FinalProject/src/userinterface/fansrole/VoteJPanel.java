/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package userinterface.fansrole;

import business.EcoSystem;
import business.enterprise.Enterprise;
import business.network.Network;
import business.organization.FansOrganization;
import business.player.Vote;
import business.role.PlayerRole;
import business.useraccount.UserAccount;
import java.awt.CardLayout;
import java.awt.Color;
import java.util.ArrayList;
import javax.swing.DefaultListModel;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
//import org.jfree.data.category.DefaultCategoryDataset;
import org.jfree.chart.*;
import org.jfree.chart.plot.CategoryPlot;
import org.jfree.chart.plot.PiePlot;
import org.jfree.chart.plot.PlotOrientation;
import org.jfree.data.category.DefaultCategoryDataset;
import org.jfree.data.general.DefaultPieDataset;

/**
 *
 * @author mwhai_000
 */
public class VoteJPanel extends javax.swing.JPanel {

    private JPanel userProcessContainer;
    private UserAccount account;
    private FansOrganization fansOrganization;
    private Enterprise enterprise;
    private EcoSystem system;

    /**
     * Creates new form VoteJPanel
     */
    VoteJPanel(JPanel userProcessContainer, UserAccount account, FansOrganization fansOrganization, Enterprise enterprise, EcoSystem system) {
        initComponents();

        this.userProcessContainer = userProcessContainer;
        this.account = account;
        this.enterprise = enterprise;
        this.fansOrganization = fansOrganization;
        this.system = system;
        populateCmbNetwork();
        populateJPlayerListByEnterprise(enterprise);
    }

    private void populateCmbNetwork() {
        cmbNetWork.removeAllItems();

        for (Network network : system.getNetworkList()) {
            cmbNetWork.addItem(network);
        }
    }

    private void populateCmbClub(Network network) {
        cmbClub.removeAllItems();
        for (Enterprise enterprise : network.getEnterpriseDirectory().getEnterpriseList()) {
            if (!enterprise.equals(this.enterprise)) {
                cmbClub.addItem(enterprise);
            }
        }
    }

    private void populateJPlayerListByEnterprise(Enterprise enterprise) {
        DefaultListModel model = new DefaultListModel();
        model.setSize(0);

        ArrayList<UserAccount> list = system.getPlayerByEnterprise(enterprise);
        for (UserAccount ua : list) {
            model.addElement(ua);
        }
        playerJList.setModel(model);
    }

    private void populateJPlayerToBuyListByEnterprise(Enterprise enterprise) {
        DefaultListModel model = new DefaultListModel();
        model.setSize(0);

        ArrayList<UserAccount> list = system.getPlayerByEnterprise(enterprise);
        for (UserAccount ua : list) {
            model.addElement(ua);
        }
        playerToBuyJList.setModel(model);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        enterpriseLabel = new javax.swing.JLabel();
        enterpriseLabel1 = new javax.swing.JLabel();
        jScrollPane3 = new javax.swing.JScrollPane();
        playerJList = new javax.swing.JList();
        jScrollPane4 = new javax.swing.JScrollPane();
        playerToBuyJList = new javax.swing.JList();
        cmbNetWork = new javax.swing.JComboBox();
        cmbClub = new javax.swing.JComboBox();
        jLabel16 = new javax.swing.JLabel();
        voteButton = new javax.swing.JButton();
        voteButton1 = new javax.swing.JButton();
        btnBack = new javax.swing.JButton();
        seeButton = new javax.swing.JButton();
        tabbedPane = new javax.swing.JTabbedPane();
        barChartPanel = new javax.swing.JPanel();
        pieChartPanel = new javax.swing.JPanel();

        enterpriseLabel.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        enterpriseLabel.setText("Who is your favorite player in our team?");

        enterpriseLabel1.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        enterpriseLabel1.setText("Who is the player you wish us to buy?");

        playerJList.setModel(new javax.swing.AbstractListModel() {
            String[] strings = { "Item 1", "Item 2", "Item 3", "Item 4", "Item 5" };
            public int getSize() { return strings.length; }
            public Object getElementAt(int i) { return strings[i]; }
        });
        playerJList.addListSelectionListener(new javax.swing.event.ListSelectionListener() {
            public void valueChanged(javax.swing.event.ListSelectionEvent evt) {
                playerJListValueChanged(evt);
            }
        });
        jScrollPane3.setViewportView(playerJList);

        playerToBuyJList.setModel(new javax.swing.AbstractListModel() {
            String[] strings = { "Item 1", "Item 2", "Item 3", "Item 4", "Item 5" };
            public int getSize() { return strings.length; }
            public Object getElementAt(int i) { return strings[i]; }
        });
        playerToBuyJList.addListSelectionListener(new javax.swing.event.ListSelectionListener() {
            public void valueChanged(javax.swing.event.ListSelectionEvent evt) {
                playerToBuyJListValueChanged(evt);
            }
        });
        jScrollPane4.setViewportView(playerToBuyJList);

        cmbNetWork.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        cmbNetWork.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cmbNetWorkActionPerformed(evt);
            }
        });

        cmbClub.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        cmbClub.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cmbClubActionPerformed(evt);
            }
        });

        jLabel16.setText("Filtr By Club");

        voteButton.setText("Vote");
        voteButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                voteButtonActionPerformed(evt);
            }
        });

        voteButton1.setText("VOTE!");
        voteButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                voteButton1ActionPerformed(evt);
            }
        });

        btnBack.setText("<<Back");
        btnBack.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBackActionPerformed(evt);
            }
        });

        seeButton.setText("See Result");
        seeButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                seeButtonActionPerformed(evt);
            }
        });

        barChartPanel.setLayout(new java.awt.BorderLayout());
        tabbedPane.addTab("Bar Chart", barChartPanel);

        pieChartPanel.setLayout(new java.awt.BorderLayout());
        tabbedPane.addTab("Pie Chart", pieChartPanel);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(34, 34, 34)
                        .addComponent(enterpriseLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 444, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(53, 53, 53)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(layout.createSequentialGroup()
                                        .addGap(12, 12, 12)
                                        .addComponent(btnBack))
                                    .addComponent(cmbNetWork, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabel16)
                                    .addComponent(cmbClub, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(9, 9, 9)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jScrollPane4, javax.swing.GroupLayout.PREFERRED_SIZE, 107, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGroup(layout.createSequentialGroup()
                                        .addGap(43, 43, 43)
                                        .addComponent(voteButton1))))
                            .addComponent(enterpriseLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 444, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 107, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(voteButton)
                                    .addComponent(seeButton))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 100, Short.MAX_VALUE)
                                .addComponent(tabbedPane, javax.swing.GroupLayout.PREFERRED_SIZE, 308, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                .addGap(79, 79, 79))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(48, 48, 48)
                .addComponent(enterpriseLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(36, 36, 36)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 101, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(27, 27, 27)
                        .addComponent(voteButton)
                        .addGap(26, 26, 26)
                        .addComponent(seeButton))
                    .addComponent(tabbedPane))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 29, Short.MAX_VALUE)
                .addComponent(enterpriseLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel16)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(cmbNetWork, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(cmbClub, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jScrollPane4, javax.swing.GroupLayout.PREFERRED_SIZE, 116, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(27, 27, 27)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnBack)
                    .addComponent(voteButton1))
                .addGap(36, 36, 36))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void playerJListValueChanged(javax.swing.event.ListSelectionEvent evt) {//GEN-FIRST:event_playerJListValueChanged
        // TODO add your handling code here:

        int row = playerJList.getSelectedIndex();
        if (row < 0) {
            return;
        }
        UserAccount chosenPlayer = (UserAccount) playerJList.getSelectedValue();

    }//GEN-LAST:event_playerJListValueChanged

    private void playerToBuyJListValueChanged(javax.swing.event.ListSelectionEvent evt) {//GEN-FIRST:event_playerToBuyJListValueChanged
        // TODO add your handling code here:
    }//GEN-LAST:event_playerToBuyJListValueChanged

    private void cmbNetWorkActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cmbNetWorkActionPerformed
        // TODO add your handling code here:

        Network network = (Network) cmbNetWork.getSelectedItem();
        if (network != null) {
            populateCmbClub(network);
        }
    }//GEN-LAST:event_cmbNetWorkActionPerformed

    private void cmbClubActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cmbClubActionPerformed
        // TODO add your handling code here:

        Enterprise enterprise = (Enterprise) cmbClub.getSelectedItem();
        if (enterprise != null) {
            populateJPlayerToBuyListByEnterprise(enterprise);
        }
    }//GEN-LAST:event_cmbClubActionPerformed

    private void voteButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_voteButtonActionPerformed
        // TODO add your handling code here:

        int row = playerJList.getSelectedIndex();

        if (row < 0) {
            JOptionPane.showMessageDialog(null, "Please select a row!!", "Warning", JOptionPane.WARNING_MESSAGE);
            return;
        }

        UserAccount chosenPlayer = (UserAccount) playerJList.getSelectedValue();
        PlayerRole playerRole = (PlayerRole) chosenPlayer.getRole();
        Vote v = playerRole.addVote();
        v.setFromClub(enterprise);


    }//GEN-LAST:event_voteButtonActionPerformed

    private void voteButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_voteButton1ActionPerformed
        // TODO add your handling code here:
        int row = playerJList.getSelectedIndex();
        if (row < 0) {
            JOptionPane.showMessageDialog(null, "Please select a row!!", "Warning", JOptionPane.WARNING_MESSAGE);
            return;
        }
        UserAccount chosenPlayer = (UserAccount) playerJList.getSelectedValue();
        PlayerRole playerRole = (PlayerRole) chosenPlayer.getRole();
//        int count = playerRole.getFame().getVoteFromOtherClubCount();
        Vote v = playerRole.addVote();
        v.setFromClub(enterprise);

    }//GEN-LAST:event_voteButton1ActionPerformed

    private void btnBackActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBackActionPerformed
        // TODO add your handling code here:
        userProcessContainer.remove(this);
        CardLayout layout = (CardLayout) userProcessContainer.getLayout();
        layout.previous(userProcessContainer);
    }//GEN-LAST:event_btnBackActionPerformed

    private void seeButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_seeButtonActionPerformed
        // TODO add your handling code here:

            populateBarChart();

            populatePieChart();
       
    }//GEN-LAST:event_seeButtonActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JPanel barChartPanel;
    private javax.swing.JButton btnBack;
    private javax.swing.JComboBox cmbClub;
    private javax.swing.JComboBox cmbNetWork;
    private javax.swing.JLabel enterpriseLabel;
    private javax.swing.JLabel enterpriseLabel1;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JPanel pieChartPanel;
    private javax.swing.JList playerJList;
    private javax.swing.JList playerToBuyJList;
    private javax.swing.JButton seeButton;
    private javax.swing.JTabbedPane tabbedPane;
    private javax.swing.JButton voteButton;
    private javax.swing.JButton voteButton1;
    // End of variables declaration//GEN-END:variables

    private void populatePieChart() {

        DefaultPieDataset pieDataset = new DefaultPieDataset();
        for (UserAccount ua : enterprise.getPlayerFromEnterprise()) {
            PlayerRole pr = (PlayerRole) ua.getRole();
            pieDataset.setValue(ua.getEmployee().getName(), pr.getVoteList().size());
        }
        
        JFreeChart pieChart = ChartFactory.createPieChart("Most Popular Player Pie Chart", pieDataset, true, true, true);
        PiePlot p = (PiePlot)pieChart.getPlot();
//        ChartFrame frame = new ChartFrame("Most Popular Player Pie Chart",pieChart);
//        frame.setVisible(true);
//        frame.setSize(600, 800);
        ChartPanel piePanel = new ChartPanel(pieChart);
        
        pieChartPanel.removeAll();
        pieChartPanel.add(piePanel);
        pieChartPanel.updateUI();
    }

    private void populateBarChart() {

        DefaultCategoryDataset bar = new DefaultCategoryDataset();

        JFreeChart barChart = ChartFactory.createBarChart("Most Popular Player Bar Chart", "Player", "Vote", bar, PlotOrientation.HORIZONTAL, true, true, false);
//        ChartFrame frame = new ChartFrame("Most Popular Player Bar Chart", barChart);
//        frame.setVisible(true);
//        frame.setSize(600, 800);

        CategoryPlot barchrt = barChart.getCategoryPlot();
        ChartPanel barPanel = new ChartPanel(barChart);

        for (UserAccount ua : enterprise.getPlayerFromEnterprise()) {
            PlayerRole pr = (PlayerRole) ua.getRole();
            bar.addValue(pr.getVoteList().size(), "Vote", ua.getEmployee().getName());
        }

        barChartPanel.removeAll();
        barChartPanel.add(barPanel);
        barChartPanel.updateUI();

    }

}
